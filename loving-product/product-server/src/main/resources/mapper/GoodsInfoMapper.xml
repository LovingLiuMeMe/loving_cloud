<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lovingliu.loving.dao.GoodsInfoMapper">
  <resultMap id="BaseResultMap" type="cn.lovingliu.loving.model.GoodsInfo">
    <id column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_intro" jdbcType="VARCHAR" property="goodsIntro" />
    <result column="goods_category_id" jdbcType="BIGINT" property="goodsCategoryId" />
    <result column="goods_cover_img" jdbcType="VARCHAR" property="goodsCoverImg" />
    <result column="goods_carousel" jdbcType="VARCHAR" property="goodsCarousel" />
    <result column="original_price" jdbcType="INTEGER" property="originalPrice" />
    <result column="selling_price" jdbcType="INTEGER" property="sellingPrice" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="goods_sell_status" jdbcType="TINYINT" property="goodsSellStatus" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.lovingliu.loving.model.GoodsInfo">
    <result column="goods_detail_content" jdbcType="LONGVARCHAR" property="goodsDetailContent" />
    <result column="config_param" jdbcType="LONGVARCHAR" property="configParam" />
  </resultMap>
  <sql id="Base_Column_List">
    goods_id, goods_name, goods_intro, goods_category_id, goods_cover_img, goods_carousel, 
    original_price, selling_price, stock_num, tag, goods_sell_status, create_user, create_time, 
    update_user, update_time
  </sql>
  <sql id="Blob_Column_List">
    goods_detail_content, config_param
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from loving_mall_goods_info
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from loving_mall_goods_info
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.lovingliu.loving.model.GoodsInfo">
    <selectKey keyProperty="goodsId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into loving_mall_goods_info (goods_name, goods_intro, goods_category_id, 
      goods_cover_img, goods_carousel, original_price, 
      selling_price, stock_num, tag, 
      goods_sell_status, create_user, create_time, 
      update_user, update_time, goods_detail_content, 
      config_param)
    values (#{goodsName,jdbcType=VARCHAR}, #{goodsIntro,jdbcType=VARCHAR}, #{goodsCategoryId,jdbcType=BIGINT}, 
      #{goodsCoverImg,jdbcType=VARCHAR}, #{goodsCarousel,jdbcType=VARCHAR}, #{originalPrice,jdbcType=INTEGER}, 
      #{sellingPrice,jdbcType=INTEGER}, #{stockNum,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR}, 
      #{goodsSellStatus,jdbcType=TINYINT}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{goodsDetailContent,jdbcType=LONGVARCHAR}, 
      #{configParam,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lovingliu.loving.model.GoodsInfo">
    <selectKey keyProperty="goodsId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into loving_mall_goods_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsIntro != null">
        goods_intro,
      </if>
      <if test="goodsCategoryId != null">
        goods_category_id,
      </if>
      <if test="goodsCoverImg != null">
        goods_cover_img,
      </if>
      <if test="goodsCarousel != null">
        goods_carousel,
      </if>
      <if test="originalPrice != null">
        original_price,
      </if>
      <if test="sellingPrice != null">
        selling_price,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="goodsSellStatus != null">
        goods_sell_status,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="goodsDetailContent != null">
        goods_detail_content,
      </if>
      <if test="configParam != null">
        config_param,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsIntro != null">
        #{goodsIntro,jdbcType=VARCHAR},
      </if>
      <if test="goodsCategoryId != null">
        #{goodsCategoryId,jdbcType=BIGINT},
      </if>
      <if test="goodsCoverImg != null">
        #{goodsCoverImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsCarousel != null">
        #{goodsCarousel,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null">
        #{originalPrice,jdbcType=INTEGER},
      </if>
      <if test="sellingPrice != null">
        #{sellingPrice,jdbcType=INTEGER},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="goodsSellStatus != null">
        #{goodsSellStatus,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsDetailContent != null">
        #{goodsDetailContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="configParam != null">
        #{configParam,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lovingliu.loving.model.GoodsInfo">
    update loving_mall_goods_info
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsIntro != null">
        goods_intro = #{goodsIntro,jdbcType=VARCHAR},
      </if>
      <if test="goodsCategoryId != null">
        goods_category_id = #{goodsCategoryId,jdbcType=BIGINT},
      </if>
      <if test="goodsCoverImg != null">
        goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsCarousel != null">
        goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null">
        original_price = #{originalPrice,jdbcType=INTEGER},
      </if>
      <if test="sellingPrice != null">
        selling_price = #{sellingPrice,jdbcType=INTEGER},
      </if>
      <if test="stockNum != null">
        stock_num = #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="goodsSellStatus != null">
        goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsDetailContent != null">
        goods_detail_content = #{goodsDetailContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="configParam != null">
        config_param = #{configParam,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.lovingliu.loving.model.GoodsInfo">
    update loving_mall_goods_info
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_intro = #{goodsIntro,jdbcType=VARCHAR},
      goods_category_id = #{goodsCategoryId,jdbcType=BIGINT},
      goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
      goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=INTEGER},
      selling_price = #{sellingPrice,jdbcType=INTEGER},
      stock_num = #{stockNum,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      goods_detail_content = #{goodsDetailContent,jdbcType=LONGVARCHAR},
      config_param = #{configParam,jdbcType=LONGVARCHAR}
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lovingliu.loving.model.GoodsInfo">
    update loving_mall_goods_info
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_intro = #{goodsIntro,jdbcType=VARCHAR},
      goods_category_id = #{goodsCategoryId,jdbcType=BIGINT},
      goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
      goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=INTEGER},
      selling_price = #{sellingPrice,jdbcType=INTEGER},
      stock_num = #{stockNum,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>

  <select id="selectAllByKeywordAndSellStatus" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from loving_mall_goods_info
    <where>
      <if test="keyword != null">
        and goods_name like concat(concat('%', #{keyword}), '%')
      </if>
      <if test="sellStatus != null">
        and goods_sell_status = #{sellStatus}
      </if>
    </where>
  </select>
  <select id="selectByCategoryId" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from loving_mall_goods_info
    where goods_category_id = #{categoryId}
  </select>
  <update id="updateSellStatusByPrimaryKey" parameterType="long">
    update
    loving_mall_goods_info
    set goods_sell_status = abs(goods_sell_status - 1)
    where goods_id = #{goodsId}
  </update>
  <delete id="deleteByPrimaryKeyList" parameterType="list">
    delete
    from loving_mall_goods_info
    <where>
      and goods_id in
      <foreach collection="goodsInfoIdList" item="goodsInfoId" index="index" open="(" close=")" separator=",">
        #{goodsInfoId}
      </foreach>
    </where>
  </delete>
  <update id="updateGoodsInfoStockNum" parameterType="list">
    <foreach collection="list" item="item" index="index" open=" " separator=";" close=";">
      update loving_mall_goods_info
      set stock_num = stock_num + #{item.changeAmount}
      where goods_id = #{item.goodsId}
    </foreach>
  </update>
  <select id="selectByPrimaryKeyList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from loving_mall_goods_info
    <where>
      <if test="goodsInfoIdList != null">
        and goods_id in
        <foreach collection="goodsInfoIdList" item="goodsInfoId" open="(" separator="," close=")">
          #{goodsInfoId}
        </foreach>
      </if>
    </where>
  </select>
</mapper>