<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lovingliu.loving.dao.UserAddressMapper">
  <resultMap id="BaseResultMap" type="cn.lovingliu.loving.model.UserAddress">
    <id column="address_id" jdbcType="BIGINT" property="addressId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="is_default" jdbcType="TINYINT" property="isDefault" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="county" jdbcType="VARCHAR" property="county" />
    <result column="addressDetail" jdbcType="VARCHAR" property="addressdetail" />
    <result column="postalCode" jdbcType="VARCHAR" property="postalcode" />
    <result column="areaCode" jdbcType="VARCHAR" property="areacode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    address_id, user_id, name, telephone, is_default, province, city, county, addressDetail, 
    postalCode, areaCode, address, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loving_mall_user_address
    where address_id = #{addressId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from loving_mall_user_address
    where address_id = #{addressId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.lovingliu.loving.model.UserAddress">
    <selectKey keyProperty="addressId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into loving_mall_user_address (user_id, name, telephone, 
      is_default, province, city, 
      county, addressDetail, postalCode, 
      areaCode, address, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=TINYINT}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{county,jdbcType=VARCHAR}, #{addressdetail,jdbcType=VARCHAR}, #{postalcode,jdbcType=VARCHAR}, 
      #{areacode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.lovingliu.loving.model.UserAddress">
    <selectKey keyProperty="addressId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into loving_mall_user_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="addressdetail != null">
        addressDetail,
      </if>
      <if test="postalcode != null">
        postalCode,
      </if>
      <if test="areacode != null">
        areaCode,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="addressdetail != null">
        #{addressdetail,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null">
        #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="areacode != null">
        #{areacode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lovingliu.loving.model.UserAddress">
    update loving_mall_user_address
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="addressdetail != null">
        addressDetail = #{addressdetail,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null">
        postalCode = #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="areacode != null">
        areaCode = #{areacode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lovingliu.loving.model.UserAddress">
    update loving_mall_user_address
    set user_id = #{userId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=TINYINT},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      addressDetail = #{addressdetail,jdbcType=VARCHAR},
      postalCode = #{postalcode,jdbcType=VARCHAR},
      areaCode = #{areacode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where address_id = #{addressId,jdbcType=BIGINT}
  </update>
  <select id="findWithUserId" resultMap="BaseResultMap" parameterType="long">
    select
    <include refid="Base_Column_List" />
    from loving_mall_user_address
    where user_id = #{userId}
  </select>
  <update id="updateIsDeletedByUserId">
    update loving_mall_user_address
    set is_default = #{isDefault}
    where user_id = #{userId}
  </update>
</mapper>