<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lovingliu.loving.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.lovingliu.loving.model.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="introduce_sign" jdbcType="VARCHAR" property="introduceSign" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="locked_flag" jdbcType="TINYINT" property="lockedFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, nick_name, user_name, password, introduce_sign, is_deleted, locked_flag, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loving_mall_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from loving_mall_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.lovingliu.loving.model.User">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into loving_mall_user (nick_name, user_name, password, 
      introduce_sign, is_deleted, locked_flag, 
      create_time, update_time)
    values (#{nickName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{introduceSign,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}, #{lockedFlag,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.lovingliu.loving.model.User">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into loving_mall_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="introduceSign != null">
        introduce_sign,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="lockedFlag != null">
        locked_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="introduceSign != null">
        #{introduceSign,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="lockedFlag != null">
        #{lockedFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lovingliu.loving.model.User">
    update loving_mall_user
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="introduceSign != null">
        introduce_sign = #{introduceSign,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="lockedFlag != null">
        locked_flag = #{lockedFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lovingliu.loving.model.User">
    update loving_mall_user
    set nick_name = #{nickName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      introduce_sign = #{introduceSign,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      locked_flag = #{lockedFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectByUserNameAndPassword" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from loving_mall_user
    where user_name = #{userName,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from loving_mall_user
  </select>
</mapper>