<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lovingliu.loving.dao.ActivityMapper">
  <resultMap id="BaseResultMap" type="cn.lovingliu.loving.model.Activity">
    <id column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="activity_name" jdbcType="VARCHAR" property="activityName" />
    <result column="activity_rank" jdbcType="INTEGER" property="activityRank" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    activity_id, activity_name, activity_rank, is_deleted, create_time, create_user, 
    update_time, update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loving_mall_activity
    where activity_id = #{activityId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from loving_mall_activity
    where activity_id = #{activityId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.lovingliu.loving.model.Activity">
    <selectKey keyProperty="activityId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into loving_mall_activity (activity_name, activity_rank, is_deleted, 
      create_time, create_user, update_time, 
      update_user)
    values (#{activityName,jdbcType=VARCHAR}, #{activityRank,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.lovingliu.loving.model.Activity">
    <selectKey keyProperty="activityId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into loving_mall_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activityName != null">
        activity_name,
      </if>
      <if test="activityRank != null">
        activity_rank,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activityName != null">
        #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="activityRank != null">
        #{activityRank,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lovingliu.loving.model.Activity">
    update loving_mall_activity
    <set>
      <if test="activityName != null">
        activity_name = #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="activityRank != null">
        activity_rank = #{activityRank,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where activity_id = #{activityId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lovingliu.loving.model.Activity">
    update loving_mall_activity
    set activity_name = #{activityName,jdbcType=VARCHAR},
      activity_rank = #{activityRank,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where activity_id = #{activityId,jdbcType=BIGINT}
  </update>
  <select id="selectByIsDeleted" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from loving_mall_activity
    <where >
    <if test="isDeleted != null">
      and is_deleted = #{isDeleted}
    </if>
    </where>
  </select>
</mapper>